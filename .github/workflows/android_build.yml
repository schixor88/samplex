name: Android Build CI

#on push of branches 'all [*]' except master [!master]
#on pull-request of 'master' branch only
on:
  pull_request:
    branches:
      - 'master'
  push:
    branches:
      - '*'
      - '!master'

#jobs needed to perform
jobs:
  #1 build job
  build:
    name: Run Build on Project # title
    runs-on: ubuntu-latest # runs on
    steps:
      - uses: actions/checkout@v1
      - name: Set Up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Change wrapper permissions # permissions chmod +x to access gradle
        run: chmod +x ./gradlew

      - name: Build Project
        run: ./gradlew assemble # gradle action to build

  #2 apk generate job
  apk:
    name: Generate APK
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Set Up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build debug APK
        run: bash ./gradlew assembleDebug --stacktrace
        
#       - uses: actions/checkout@v2  # if you checkout the build/outputs will be cleared and apk will not be found
      - uses: actions/setup-python@v2
      - name: Deploy APK to Dropbox
        with:
          python-version: '3.x' # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified, tokens
      - run: | # python script to deploy the apk to desired dropbox
          pip install dropbox
          python ci_deploy.py

#      Upload the APK as artifact in github
      - name: Upload APK
      - uses: actions/upload-artifact@v1
        with:
          name: app-debug.apk
          path: app/build/outputs/apk/debug/app-debug.apk

#  deploy:
#    name: Delpoy APK
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions/setup-python@v2
#        with:
#          python-version: '3.x' # Version range or exact version of a Python version to use, using SemVer's version range syntax
#          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified, tokens
#
#      - run: |
#          pip install dropbox
#          python ci_deploy.py
